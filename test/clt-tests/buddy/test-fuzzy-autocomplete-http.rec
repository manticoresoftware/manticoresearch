––– block: ../base/start-searchd-with-buddy –––
––– input –––
apt-get update -y > /dev/null; echo $?
––– output –––
0
––– input –––
apt-get install jq -y > /dev/null; echo $?
––– output –––
debconf: delaying package configuration, since apt-utils is not installed
0
––– input –––
php -d memory_limit=2G ./test/clt-tests/scripts/load_names_attr.php --batch-size=100000 --concurrency=1 --docs=1000000 --start-id=1 --min-infix-len=2 > /dev/null; echo $?
––– output –––
0
––– input –––
mysql -h0 -P9306 -e "SELECT * FROM name ORDER BY id ASC LIMIT 1000000 OPTION max_matches=1000000;" > /tmp/name_data.txt
––– output –––
––– input –––
md5sum /tmp/name_data.txt
––– output –––
1995eec70e60c584bc35ff0688556b94  /tmp/name_data.txt
––– input –––
mysql -h0 -P9306 -e "SHOW CREATE TABLE name;" | grep "min_infix_len='2'" | sed "s/.\(min_infix_len='2'\)./\1/"
––– output –––
)min_infix_len='2'expand_keywords='1' |
––– input –––
mysql -h0 -P9306 -e "SELECT COUNT(*) FROM name;"
––– output –––
+----------+
| count(*) |
+----------+
|  1000000 |
+----------+
––– input –––
mysql -h0 -P9306 -e "OPTIMIZE TABLE name OPTION sync=1;"
––– output –––
––– input –––
curl -sX POST http://localhost:9308/search -d '{"index":"name","query":{"bool":{"must":[{"match":{"*":"EBGRNA"}}]}},"options":{"fuzzy":true}}' | jq -r '.hits.hits[]._source.username'
––– output –––
BERNA PFEIFFER
BERNA SAGE
BERNA PANG
BERNA STOLTZFUS
BERNA HALVERSON
BERNA PLASCENCIA
BERNA CALLAWAY
BERNA STONER
BERNA MARSH
BERNA LEI
BERNA SOUSA
BERNA LIAO
BERNA TROTTER
BERNA VALDOVINOS
BERNA VALLE
BERNA ELKINS
BERNA HURD
BERNA DUARTE
BERNA HAUGEN
BERNA LISTER
––– input –––
curl -sX POST http://localhost:9308/search -d '{"index":"name","query":{"bool":{"must":[{"match":{"*":"ANT"}}]}},"options":{"fuzzy":true}}' | jq -r '.hits.hits[]._source.username'
––– output –––
SHANE GANT
DANILLE GANT
BLANCH GANT
TRISTAN GANT
NATHANAEL GANT
JANESSA GANT
ANDREW GANT
KORTNEY GANT
SABINE GANT
IRA GANT
SHAWNTA GANT
TRACEY GANT
JIM GANT
GERRY GANT
ELROY GANT
ERIN GANT
LEONARDA GANT
JARED GANT
RODNEY GANT
ROCKY GANT
––– input –––
curl -sX POST http://localhost:9308/search -d '{"index":"name","query":{"bool":{"must":[{"match":{"*":"tony"}}]}},"options":{"fuzzy":true}}' | jq -M
––– output –––
{
  "took": %{NUMBER},
  "timed_out": false,
  "hits": {
    "total": 1813,
    "total_relation": "eq",
    "hits": [
      {
        "_id": 800363,
        "_score": 1547,
        "_source": {
          "username": "TOBY BEAULIEU",
          "s": "a"
        }
      },
      {
        "_id": 807095,
        "_score": 1547,
        "_source": {
          "username": "TOBY HOFER",
          "s": "a"
        }
      },
      {
        "_id": 807096,
        "_score": 1547,
        "_source": {
          "username": "TOBY DEMPSEY",
          "s": "a"
        }
      },
      {
        "_id": 808820,
        "_score": 1547,
        "_source": {
          "username": "TOBY RAYMOND",
          "s": "a"
        }
      },
      {
        "_id": 808863,
        "_score": 1547,
        "_source": {
          "username": "TOBY BATEMAN",
          "s": "a"
        }
      },
      {
        "_id": 813761,
        "_score": 1547,
        "_source": {
          "username": "TOBY VANWINKLE",
          "s": "a"
        }
      },
      {
        "_id": 818229,
        "_score": 1547,
        "_source": {
          "username": "TOBY BROCK",
          "s": "a"
        }
      },
      {
        "_id": 825472,
        "_score": 1547,
        "_source": {
          "username": "TOBY LINDQUIST",
          "s": "a"
        }
      },
      {
        "_id": 826251,
        "_score": 1547,
        "_source": {
          "username": "TOBY KAUFFMAN",
          "s": "a"
        }
      },
      {
        "_id": 827886,
        "_score": 1547,
        "_source": {
          "username": "TOBY PITMAN",
          "s": "a"
        }
      },
      {
        "_id": 832558,
        "_score": 1547,
        "_source": {
          "username": "TOBY KELLEY",
          "s": "a"
        }
      },
      {
        "_id": 833689,
        "_score": 1547,
        "_source": {
          "username": "TOBY HANDY",
          "s": "a"
        }
      },
      {
        "_id": 834136,
        "_score": 1547,
        "_source": {
          "username": "TOBY HOPPE",
          "s": "a"
        }
      },
      {
        "_id": 836413,
        "_score": 1547,
        "_source": {
          "username": "TOBY STOVALL",
          "s": "a"
        }
      },
      {
        "_id": 839075,
        "_score": 1547,
        "_source": {
          "username": "TOBY JEROME",
          "s": "a"
        }
      },
      {
        "_id": 839512,
        "_score": 1547,
        "_source": {
          "username": "TOBY LEONARD",
          "s": "a"
        }
      },
      {
        "_id": 841923,
        "_score": 1547,
        "_source": {
          "username": "TOBY PARNELL",
          "s": "a"
        }
      },
      {
        "_id": 842450,
        "_score": 1547,
        "_source": {
          "username": "TOBY LOWE",
          "s": "a"
        }
      },
      {
        "_id": 843217,
        "_score": 1547,
        "_source": {
          "username": "TOBY ROBISON",
          "s": "a"
        }
      },
      {
        "_id": 846291,
        "_score": 1547,
        "_source": {
          "username": "TOBY BITTNER",
          "s": "a"
        }
      }
    ]
  }
}
––– input –––
curl -sX POST http://localhost:9308/search -d '{"index":"name","query":{"bool":{"must":[{"match":{"*":"SMITH"}}]}}, "sort":[{"id":"desc"},{"username":"asc"}], "options":{"fuzzy":true}}' | jq -M
––– output –––
{
  "took": %{NUMBER},
  "timed_out": false,
  "hits": {
    "total": 1304,
    "total_relation": "eq",
    "hits": [
      {
        "_id": 999737,
        "_score": 1,
        "_source": {
          "username": "KEITH STUMP",
          "s": "a"
        }
      },
      {
        "_id": 999039,
        "_score": 1,
        "_source": {
          "username": "KEITH JAMIESON",
          "s": "a"
        }
      },
      {
        "_id": 996439,
        "_score": 1,
        "_source": {
          "username": "KEITHA CARBAJAL",
          "s": "a"
        }
      },
      {
        "_id": 995770,
        "_score": 1,
        "_source": {
          "username": "KEITH GONZALES",
          "s": "a"
        }
      },
      {
        "_id": 990882,
        "_score": 1,
        "_source": {
          "username": "MINH SANTANA",
          "s": "a"
        }
      },
      {
        "_id": 990643,
        "_score": 1,
        "_source": {
          "username": "KEITH MENDES",
          "s": "a"
        }
      },
      {
        "_id": 989972,
        "_score": 1,
        "_source": {
          "username": "KEITHA WALTERS",
          "s": "a"
        }
      },
      {
        "_id": 989954,
        "_score": 1,
        "_source": {
          "username": "GWENN SMYTH",
          "s": "a"
        }
      },
      {
        "_id": 989444,
        "_score": 1,
        "_source": {
          "username": "KEITH KEATON",
          "s": "a"
        }
      },
      {
        "_id": 988755,
        "_score": 1,
        "_source": {
          "username": "SHERRON SMYTH",
          "s": "a"
        }
      },
      {
        "_id": 988366,
        "_score": 1,
        "_source": {
          "username": "LAVONIA SMYTH",
          "s": "a"
        }
      },
      {
        "_id": 988254,
        "_score": 1,
        "_source": {
          "username": "MAYOLA KEITH",
          "s": "a"
        }
      },
      {
        "_id": 987106,
        "_score": 1,
        "_source": {
          "username": "KEITH FAULK",
          "s": "a"
        }
      },
      {
        "_id": 986580,
        "_score": 1,
        "_source": {
          "username": "DARNELL SMYTH",
          "s": "a"
        }
      },
      {
        "_id": 984012,
        "_score": 1,
        "_source": {
          "username": "KEITH CORONEL",
          "s": "a"
        }
      },
      {
        "_id": 982759,
        "_score": 1,
        "_source": {
          "username": "MORGAN KEITH",
          "s": "a"
        }
      },
      {
        "_id": 982421,
        "_score": 1,
        "_source": {
          "username": "KEITH SHIFFLETT",
          "s": "a"
        }
      },
      {
        "_id": 982223,
        "_score": 1,
        "_source": {
          "username": "TELMA KEITH",
          "s": "a"
        }
      },
      {
        "_id": 982056,
        "_score": 1,
        "_source": {
          "username": "RENITA KEITH",
          "s": "a"
        }
      },
      {
        "_id": 981115,
        "_score": 1,
        "_source": {
          "username": "KATIE SMYTH",
          "s": "a"
        }
      }
    ]
  }
}
––– input –––
curl -sX POST http://localhost:9308/search -d '{"index":"name","query":{"bool":{"must":[{"match":{"*":"SMYTH"}}]}}, "sort":[{"id":"desc"},{"username":"asc"}], "options":{"fuzzy":true}}' | jq -M
––– output –––
{
  "took": %{NUMBER},
  "timed_out": false,
  "hits": {
    "total": 773,
    "total_relation": "eq",
    "hits": [
      {
        "_id": 998829,
        "_score": 1,
        "_source": {
          "username": "EDYTHE VACA",
          "s": "a"
        }
      },
      {
        "_id": 998500,
        "_score": 1,
        "_source": {
          "username": "SETH PHUNG",
          "s": "a"
        }
      },
      {
        "_id": 996507,
        "_score": 1,
        "_source": {
          "username": "SETH LYMAN",
          "s": "a"
        }
      },
      {
        "_id": 995119,
        "_score": 1,
        "_source": {
          "username": "EDYTHE JOHN",
          "s": "a"
        }
      },
      {
        "_id": 993455,
        "_score": 1,
        "_source": {
          "username": "EDYTH ROSADO",
          "s": "a"
        }
      },
      {
        "_id": 992097,
        "_score": 1,
        "_source": {
          "username": "EDYTH RAGAN",
          "s": "a"
        }
      },
      {
        "_id": 989954,
        "_score": 1,
        "_source": {
          "username": "GWENN SMYTH",
          "s": "a"
        }
      },
      {
        "_id": 988823,
        "_score": 1,
        "_source": {
          "username": "SETH WHITTAKER",
          "s": "a"
        }
      },
      {
        "_id": 988755,
        "_score": 1,
        "_source": {
          "username": "SHERRON SMYTH",
          "s": "a"
        }
      },
      {
        "_id": 988366,
        "_score": 1,
        "_source": {
          "username": "LAVONIA SMYTH",
          "s": "a"
        }
      },
      {
        "_id": 986580,
        "_score": 1,
        "_source": {
          "username": "DARNELL SMYTH",
          "s": "a"
        }
      },
      {
        "_id": 986231,
        "_score": 1,
        "_source": {
          "username": "EDYTH BLODGETT",
          "s": "a"
        }
      },
      {
        "_id": 985595,
        "_score": 1,
        "_source": {
          "username": "SETH BACON",
          "s": "a"
        }
      },
      {
        "_id": 982423,
        "_score": 1,
        "_source": {
          "username": "SETH CHATMAN",
          "s": "a"
        }
      },
      {
        "_id": 981115,
        "_score": 1,
        "_source": {
          "username": "KATIE SMYTH",
          "s": "a"
        }
      },
      {
        "_id": 979541,
        "_score": 1,
        "_source": {
          "username": "EDYTHE CLAYTON",
          "s": "a"
        }
      },
      {
        "_id": 979093,
        "_score": 1,
        "_source": {
          "username": "SETH BURROUGHS",
          "s": "a"
        }
      },
      {
        "_id": 978812,
        "_score": 1,
        "_source": {
          "username": "EDYTH GULLEY",
          "s": "a"
        }
      },
      {
        "_id": 975994,
        "_score": 1,
        "_source": {
          "username": "SETH PARHAM",
          "s": "a"
        }
      },
      {
        "_id": 975841,
        "_score": 1,
        "_source": {
          "username": "ALEIDA SMYTH",
          "s": "a"
        }
      }
    ]
  }
}
––– input –––
curl -sX POST http://localhost:9308/autocomplete -d '{"table":"name","query":"jo","options":{"layouts":"us,ru"}}' | jq -M
––– output –––
[
  {
    "total": 10,
    "error": "",
    "warning": "",
    "columns": [
      {
        "query": {
          "type": "string"
        }
      }
    ],
    "data": [
      {
        "query": "jordan"
      },
      {
        "query": "joseph"
      },
      {
        "query": "jose"
      },
      {
        "query": "joe"
      },
      {
        "query": "john"
      },
      {
        "query": "joy"
      },
      {
        "query": "joyce"
      },
      {
        "query": "joey"
      },
      {
        "query": "jon"
      },
      {
        "query": "major"
      }
    ]
  }
]
––– input –––
curl -sX POST http://localhost:9308/autocomplete -d '{"table":"name","query":"jo","options":{"append":1}}' | jq -M
––– output –––
[
  {
    "total": 10,
    "error": "",
    "warning": "",
    "columns": [
      {
        "query": {
          "type": "string"
        }
      }
    ],
    "data": [
      {
        "query": "jordan"
      },
      {
        "query": "joseph"
      },
      {
        "query": "jose"
      },
      {
        "query": "joe"
      },
      {
        "query": "john"
      },
      {
        "query": "joy"
      },
      {
        "query": "joyce"
      },
      {
        "query": "joey"
      },
      {
        "query": "jon"
      },
      {
        "query": "major"
      }
    ]
  }
]
––– input –––
curl -sX POST http://localhost:9308/autocomplete -d '{"table":"name","query":"jo","options":{"prepend":0}}' | jq -M
––– output –––
[
  {
    "total": 10,
    "error": "",
    "warning": "",
    "columns": [
      {
        "query": {
          "type": "string"
        }
      }
    ],
    "data": [
      {
        "query": "jordan"
      },
      {
        "query": "joseph"
      },
      {
        "query": "jose"
      },
      {
        "query": "joe"
      },
      {
        "query": "john"
      },
      {
        "query": "joy"
      },
      {
        "query": "joyce"
      },
      {
        "query": "joey"
      },
      {
        "query": "johnny"
      },
      {
        "query": "jon"
      }
    ]
  }
]
––– input –––
curl -sX POST http://localhost:9308/autocomplete -d '{"table":"name","query":"jo","options":{"prepend":1,"append":1}}' | jq -M
––– output –––
[
  {
    "total": 10,
    "error": "",
    "warning": "",
    "columns": [
      {
        "query": {
          "type": "string"
        }
      }
    ],
    "data": [
      {
        "query": "jordan"
      },
      {
        "query": "joseph"
      },
      {
        "query": "jose"
      },
      {
        "query": "joe"
      },
      {
        "query": "john"
      },
      {
        "query": "joy"
      },
      {
        "query": "joyce"
      },
      {
        "query": "joey"
      },
      {
        "query": "jon"
      },
      {
        "query": "major"
      }
    ]
  }
]
––– input –––
curl -sX POST http://localhost:9308/autocomplete -d '{"table":"name","query":"jo","options":{"fuzziness":1,"layouts":"","append":1,"prepend":1}}' | jq -M
––– output –––
[
  {
    "total": 10,
    "error": "",
    "warning": "",
    "columns": [
      {
        "query": {
          "type": "string"
        }
      }
    ],
    "data": [
      {
        "query": "jordan"
      },
      {
        "query": "joseph"
      },
      {
        "query": "jose"
      },
      {
        "query": "joe"
      },
      {
        "query": "john"
      },
      {
        "query": "joy"
      },
      {
        "query": "joyce"
      },
      {
        "query": "joey"
      },
      {
        "query": "jon"
      },
      {
        "query": "major"
      }
    ]
  }
]
––– input –––
curl -sX POST http://localhost:9308/autocomplete -d '{"table":"name","query":"jo","options":{"fuzziness":2,"layouts":"us,ru","append":1,"prepend":1,"expansion_len":2}}' | jq -M
––– output –––
[
  {
    "total": 6,
    "error": "",
    "warning": "",
    "columns": [
      {
        "query": {
          "type": "string"
        }
      }
    ],
    "data": [
      {
        "query": "jose"
      },
      {
        "query": "joe"
      },
      {
        "query": "john"
      },
      {
        "query": "joy"
      },
      {
        "query": "joey"
      },
      {
        "query": "jon"
      }
    ]
  }
]
––– input –––
curl -sX POST http://localhost:9308/autocomplete -d '{"table":"name","query":"gr","options":{"fuzziness":1,"layouts":"ru","append":1,"prepend":1}}' | jq -M
––– output –––
{
  "error": "At least two languages are required in layouts"
}
