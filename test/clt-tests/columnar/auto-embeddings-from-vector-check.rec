Test vector search with MODEL_NAME and FROM clause verification - ensuring FROM field selection actually affects vector generation by comparing vector checksums using bash commands

––– comment –––
Start Manticore Search with Buddy
––– input –––
rm -f /var/log/manticore/searchd.log; stdbuf -oL searchd $SEARCHD_FLAGS > /dev/null; if timeout 10 grep -qm1 '\[BUDDY\] started' <(tail -n 1000 -f /var/log/manticore/searchd.log); then echo 'Buddy started!'; else echo 'Timeout or failed!'; cat /var/log/manticore/searchd.log;fi
––– output –––
Buddy started!
––– comment –––
Test FROM clause functionality by creating two tables with different FROM specifications
––– comment –––
Table 1: Vector generated from title1 field only
––– input –––
mysql -h0 -P9306 -e "CREATE TABLE test_from_title1 (title1 TEXT, title2 TEXT, image_vector FLOAT_VECTOR KNN_TYPE='hnsw' HNSW_SIMILARITY='l2' MODEL_NAME = 'sentence-transformers/all-MiniLM-L6-v2' FROM = 'title1') engine = 'columnar'"; echo $?
––– output –––
0
––– comment –––
Table 2: Vector generated from title2 field only
––– input –––
mysql -h0 -P9306 -e "CREATE TABLE test_from_title2 (title1 TEXT, title2 TEXT, image_vector FLOAT_VECTOR KNN_TYPE='hnsw' HNSW_SIMILARITY='l2' MODEL_NAME = 'sentence-transformers/all-MiniLM-L6-v2' FROM = 'title2') engine = 'columnar'"; echo $?
––– output –––
0
––– comment –––
Insert data with very different content in title1 vs title2 - let vectors auto-generate
––– input –––
mysql -h0 -P9306 -e "INSERT INTO test_from_title1 (id, title1, title2) VALUES(1, 'machine learning artificial intelligence', 'banana fruit sweet yellow')"; echo $?
––– output –––
0
––– input –––
mysql -h0 -P9306 -e "INSERT INTO test_from_title2 (id, title1, title2) VALUES(1, 'machine learning artificial intelligence', 'banana fruit sweet yellow')"; echo $?
––– output –––
0
––– comment –––
Verify data was inserted and vectors were auto-generated
––– input –––
mysql -h0 -P9306 -e "SELECT COUNT(*) as count_table1 FROM test_from_title1"
––– output –––
+--------------+
| count_table1 |
+--------------+
|            1 |
+--------------+
––– input –––
mysql -h0 -P9306 -e "SELECT COUNT(*) as count_table2 FROM test_from_title2"
––– output –––
+--------------+
| count_table2 |
+--------------+
|            1 |
+--------------+
––– comment –––
Test that vectors are actually generated by getting their MD5 checksums using bash
––– input –––
mysql -h0 -P9306 -e "SELECT image_vector FROM test_from_title1 WHERE id=1" | grep -v image_vector | md5sum | awk '{print "title1_vector_md5: " $1}'
––– output –––
title1_vector_md5: #!/[a-f0-9]{32}/!#
––– input –––
mysql -h0 -P9306 -e "SELECT image_vector FROM test_from_title2 WHERE id=1" | grep -v image_vector | md5sum | awk '{print "title2_vector_md5: " $1}'
––– output –––
title2_vector_md5: #!/[a-f0-9]{32}/!#
––– comment –––
Test consistency: Same input should produce same vector MD5
––– input –––
mysql -h0 -P9306 -e "INSERT INTO test_from_title1 (id, title1, title2) VALUES(2, 'machine learning artificial intelligence', 'banana fruit sweet yellow')"; echo $?
––– output –––
0
––– input –––
mysql -h0 -P9306 -e "SELECT image_vector FROM test_from_title1 WHERE id=2" | grep -v image_vector | md5sum | awk '{print "consistent_md5: " $1}'
––– output –––
consistent_md5: #!/[a-f0-9]{32}/!#
––– comment –––
Test that FROM clause affects vector generation - different FROM should give different vectors
––– comment –––
Store MD5s in variables and compare
––– input –––
MD5_TITLE1=$(mysql -h0 -P9306 -e "SELECT image_vector FROM test_from_title1 WHERE id=1" | grep -v image_vector | md5sum | awk '{print $1}'); MD5_TITLE2=$(mysql -h0 -P9306 -e "SELECT image_vector FROM test_from_title2 WHERE id=1" | grep -v image_vector | md5sum | awk '{print $1}'); echo "title1_md5: $MD5_TITLE1"; echo "title2_md5: $MD5_TITLE2"; if [ "$MD5_TITLE1" != "$MD5_TITLE2" ]; then echo "SUCCESS: FROM clause produces different vectors"; else echo "FAIL: FROM clause produces same vectors"; fi
––– output –––
title1_md5: #!/[a-f0-9]{32}/!#
title2_md5: #!/[a-f0-9]{32}/!#
SUCCESS: FROM clause produces different vectors
––– comment –––
Test that same FROM produces consistent vectors
––– input –––
MD5_SAME1=$(mysql -h0 -P9306 -e "SELECT image_vector FROM test_from_title1 WHERE id=1" | grep -v image_vector | md5sum | awk '{print $1}'); MD5_SAME2=$(mysql -h0 -P9306 -e "SELECT image_vector FROM test_from_title1 WHERE id=2" | grep -v image_vector | md5sum | awk '{print $1}'); echo "same_input_md5_1: $MD5_SAME1"; echo "same_input_md5_2: $MD5_SAME2"; if [ "$MD5_SAME1" = "$MD5_SAME2" ]; then echo "SUCCESS: Same input produces same vector"; else echo "FAIL: Same input produces different vectors"; fi
––– output –––
same_input_md5_1: #!/[a-f0-9]{32}/!#
same_input_md5_2: #!/[a-f0-9]{32}/!#
SUCCESS: Same input produces same vector
––– comment –––
Test error case: invalid model name
––– input –––
mysql -h0 -P9306 -e "CREATE TABLE test_invalid (title1 TEXT, image_vector FLOAT_VECTOR KNN_TYPE='hnsw' HNSW_SIMILARITY='l2' MODEL_NAME = 'invalid-model-name' FROM = 'title1') engine = 'columnar'" 2>&1
––– output –––
ERROR 1064 (42000) at line 1: error adding table 'test_invalid': prealloc: Failed to download model configuration
––– comment –––
Test error case: FROM referencing non-existent field
––– input –––
mysql -h0 -P9306 -e "CREATE TABLE test_invalid_field (title1 TEXT, image_vector FLOAT_VECTOR KNN_TYPE='hnsw' HNSW_SIMILARITY='l2' MODEL_NAME = 'sentence-transformers/all-MiniLM-L6-v2' FROM = 'nonexistent_field') engine = 'columnar'" 2>&1
––– output –––
#!/.*ERROR.*(field|column|nonexistent).*/!#
––– comment –––
Test error case: FROM not specified
––– input –––
mysql -h0 -P9306 -e "CREATE TABLE test_no_from_specified (title1 TEXT, image_vector FLOAT_VECTOR KNN_TYPE='hnsw' HNSW_SIMILARITY='l2' MODEL_NAME = 'sentence-transformers/all-MiniLM-L6-v2') engine = 'columnar'" 2>&1
––– output –––
ERROR 1064 (42000) at line 1: error adding table 'test_no_from_specified': 'from' setting empty for KNN attribute 'image_vector'
––– comment –––
Test error case: FROM specified but empty
––– input –––
mysql -h0 -P9306 -e "CREATE TABLE test_from_set_to_empty (title1 TEXT, image_vector FLOAT_VECTOR KNN_TYPE='hnsw' HNSW_SIMILARITY='l2' MODEL_NAME = 'sentence-transformers/all-MiniLM-L6-v2' FROM = '') engine = 'columnar'" 2>&1
––– output –––
ERROR 1064 (42000) at line 1: error adding table 'test_from_set_to_empty': 'from' setting empty for KNN attribute 'image_vector'
––– comment –––
Test multiple fields in FROM clause
––– input –––
mysql -h0 -P9306 -e "CREATE TABLE test_multi_from (title1 TEXT, title2 TEXT, image_vector FLOAT_VECTOR KNN_TYPE='hnsw' HNSW_SIMILARITY='l2' MODEL_NAME = 'sentence-transformers/all-MiniLM-L6-v2' FROM = 'title1, title2') engine = 'columnar'"; echo $?
––– output –––
0
––– input –––
mysql -h0 -P9306 -e "INSERT INTO test_multi_from (id, title1, title2) VALUES(1, 'deep learning neural networks', 'computer vision algorithms')"; echo $?
––– output –––
0
––– comment –––
Verify multi-field FROM generates vectors
––– input –––
mysql -h0 -P9306 -e "SELECT image_vector FROM test_multi_from WHERE id=1" | grep -v image_vector | md5sum | awk '{print "multi_field_md5: " $1}'
––– output –––
multi_field_md5: #!/[a-f0-9]{32}/!#
––– comment –––
Test that multi-field FROM produces different vector than single fields
––– input –––
MD5_MULTI=$(mysql -h0 -P9306 -e "SELECT image_vector FROM test_multi_from WHERE id=1" | grep -v image_vector | md5sum | awk '{print $1}'); MD5_SINGLE=$(mysql -h0 -P9306 -e "SELECT image_vector FROM test_from_title1 WHERE id=1" | grep -v image_vector | md5sum | awk '{print $1}'); echo "multi_field_md5: $MD5_MULTI"; echo "single_field_md5: $MD5_SINGLE"; if [ "$MD5_MULTI" != "$MD5_SINGLE" ]; then echo "SUCCESS: Multi-field FROM produces different vector"; else echo "INFO: Multi-field vs single-field comparison"; fi
––– output –––
multi_field_md5: #!/[a-f0-9]{32}/!#
single_field_md5: #!/[a-f0-9]{32}/!#
#!/SUCCESS: Multi-field FROM produces different vector|INFO: Multi-field vs single-field comparison/!#
––– comment –––
Test MODEL_NAME without FROM clause (fails)
––– input –––
mysql -h0 -P9306 -e "CREATE TABLE test_no_from (title1 TEXT, image_vector FLOAT_VECTOR KNN_TYPE='hnsw' HNSW_SIMILARITY='l2' MODEL_NAME = 'sentence-transformers/all-MiniLM-L6-v2') engine = 'columnar'"
––– output –––
ERROR 1064 (42000) at line 1: error adding table 'test_no_from': 'from' setting empty for KNN attribute 'image_vector'
––– comment –––
Without FROM, auto-generation should not happen
––– input –––
mysql -h0 -P9306 -e "INSERT INTO test_no_from (id, title1) VALUES(1, 'test title')"; echo $?
––– output –––
0
––– comment –––
Clean up test tables
––– input –––
mysql -h0 -P9306 -e "DROP TABLE IF EXISTS test_from_title1"; echo $?
––– output –––
0
––– input –––
mysql -h0 -P9306 -e "DROP TABLE IF EXISTS test_from_title2"; echo $?
––– output –––
0
––– input –––
mysql -h0 -P9306 -e "DROP TABLE IF EXISTS test_multi_from"; echo $?
––– output –––
0
––– input –––
mysql -h0 -P9306 -e "DROP TABLE IF EXISTS test_no_from"; echo $?
––– output –––
0
