––– block: ../base/start-searchd –––
––– input –––
apt-get install jq -y > /dev/null; echo $?
––– output –––
debconf: delaying package configuration, since apt-utils is not installed
0
––– input –––
curl -s -X POST "http://localhost:9308/sql?mode=raw" -d "SHOW VERSION" | jq .
––– output –––
[
{
"total": %{NUMBER},
"error": "",
"warning": "",
"columns": [
{
"Component": {
"type": "string"
}
},
{
"Version": {
"type": "string"
}
}
],
"data": [
{
"Component": "Daemon",
"Version": "%{VERSION}"
},
{
"Component": "Columnar",
"Version": "columnar %{VERSION}"
},
{
"Component": "Secondary",
"Version": "secondary %{VERSION}"
},
{
"Component": "KNN",
"Version": "knn %{VERSION}"
},
{
"Component": "Buddy",
"Version": "buddy v%{VERSION}"
}
]
}
]
––– input –––
mysql -h0 -P9306 -e "CREATE TABLE t (id INT, value TEXT, value_attr STRING) min_infix_len = '3' min_prefix_len = '3'; INSERT INTO t VALUES (1, 'example', 'example'), (2, 'test', 'test');"
––– output –––
––– input –––
curl -s -X POST "http://localhost:9308/sql?mode=raw" -d "SHOW CREATE TABLE t" | jq .
––– output –––
[
{
"columns": [
{
"Table": {
"type": "string"
}
},
{
"Create Table": {
"type": "string"
}
}
],
"data": [
{
"Table": "t",
"Create Table": "CREATE TABLE t (\nid bigint,\nvalue text,\nvalue_attr string attribute\n) min_prefix_len='3' min_infix_len='3'"
}
],
"total": 1,
"error": "",
"warning": ""
}
]
––– input –––
curl -s -X POST "http://localhost:9308/sql?mode=raw" -d "SELECT * FROM t" | jq .
––– output –––
[
{
"columns": [
{
"id": {
"type": "long long"
}
},
{
"value": {
"type": "string"
}
},
{
"value_attr": {
"type": "string"
}
}
],
"data": [
{
"id": 1,
"value": "example",
"value_attr": "example"
},
{
"id": 2,
"value": "test",
"value_attr": "test"
}
],
"total": 2,
"error": "",
"warning": ""
}
]
––– input –––
curl -s -X POST "http://localhost:9308/sql?mode=raw" -d "SHOW TABLES" | jq .
––– output –––
[
{
"columns": [
{
"Table": {
"type": "string"
}
},
{
"Type": {
"type": "string"
}
}
],
"data": [
{
"Table": "t",
"Type": "rt"
}
],
"total": 1,
"error": "",
"warning": ""
}
]
––– input –––
curl -s -X POST "http://localhost:9308/sql?mode=raw" -d "DESCRIBE t" | jq .
––– output –––
[
{
"columns": [
{
"Field": {
"type": "string"
}
},
{
"Type": {
"type": "string"
}
},
{
"Properties": {
"type": "string"
}
}
],
"data": [
{
"Field": "id",
"Type": "bigint",
"Properties": ""
},
{
"Field": "value",
"Type": "text",
"Properties": "indexed stored"
},
{
"Field": "value_attr",
"Type": "string",
"Properties": ""
}
],
"total": 3,
"error": "",
"warning": ""
}
]
––– input –––
curl -s -X POST "http://localhost:9308/sql?mode=raw" -d "SELECT * FROM t WHERE MATCH('example')" | jq .
––– output –––
[
{
"columns": [
{
"id": {
"type": "long long"
}
},
{
"value": {
"type": "string"
}
},
{
"value_attr": {
"type": "string"
}
}
],
"data": [
{
"id": 1,
"value": "example",
"value_attr": "example"
}
],
"total": 1,
"error": "",
"warning": ""
}
]
––– input –––
curl -s -X POST "http://localhost:9308/sql?mode=raw" -d "SHOW META" | jq .
––– output –––
[
{
"columns": [
{
"Variable_name": {
"type": "string"
}
},
{
"Value": {
"type": "string"
}
}
],
"data": [
{
"Variable_name": "total",
"Value": "0"
},
{
"Variable_name": "total_found",
"Value": "0"
},
{
"Variable_name": "total_relation",
"Value": "eq"
},
{
"Variable_name": "time",
"Value": "0.000"
}
],
"total": 4,
"error": "",
"warning": ""
}
]
––– input –––
curl -s -X POST "http://localhost:9308/sql?mode=raw" -d "SELECT * FROM t WHERE MATCH('example') OPTION ranker=bm25" | jq .
––– output –––
[
{
"columns": [
{
"id": {
"type": "long long"
}
},
{
"value": {
"type": "string"
}
},
{
"value_attr": {
"type": "string"
}
}
],
"data": [
{
"id": 1,
"value": "example",
"value_attr": "example"
}
],
"total": 1,
"error": "",
"warning": ""
}
]
––– input –––
curl -s -X POST "http://localhost:9308/sql?mode=raw" -d "SELECT * FROM t WHERE MATCH('exa*')" | jq .
––– output –––
[
{
"columns": [
{
"id": {
"type": "long long"
}
},
{
"value": {
"type": "string"
}
},
{
"value_attr": {
"type": "string"
}
}
],
"data": [
{
"id": 1,
"value": "example",
"value_attr": "example"
}
],
"total": 1,
"error": "",
"warning": ""
}
]
––– input –––
curl -s -X POST "http://localhost:9308/sql?mode=raw" -d "SELECT * FROM t ORDER BY id DESC LIMIT 1" | jq .
––– output –––
[
{
"columns": [
{
"id": {
"type": "long long"
}
},
{
"value": {
"type": "string"
}
},
{
"value_attr": {
"type": "string"
}
}
],
"data": [
{
"id": 2,
"value": "test",
"value_attr": "test"
}
],
"total": 1,
"error": "",
"warning": ""
}
]
––– input –––
curl -s -X POST "http://localhost:9308/sql?mode=raw" -d "SELECT * FROM t ORDER BY id ASC LIMIT 1" | jq .
––– output –––
[
{
"columns": [
{
"id": {
"type": "long long"
}
},
{
"value": {
"type": "string"
}
},
{
"value_attr": {
"type": "string"
}
}
],
"data": [
{
"id": 1,
"value": "example",
"value_attr": "example"
}
],
"total": 1,
"error": "",
"warning": ""
}
]
––– input –––
curl -s -X POST "http://localhost:9308/sql?mode=raw" -d "SELECT * FROM t LIMIT 1 OFFSET 1" | jq .
––– output –––
[
{
"columns": [
{
"id": {
"type": "long long"
}
},
{
"value": {
"type": "string"
}
},
{
"value_attr": {
"type": "string"
}
}
],
"data": [
{
"id": 2,
"value": "test",
"value_attr": "test"
}
],
"total": 1,
"error": "",
"warning": ""
}
]
––– input –––
curl -s -X POST "http://localhost:9308/sql?mode=raw" -d "SELECT COUNT(*) AS cnt, id FROM t GROUP BY id" | jq .
––– output –––
[
{
"columns": [
{
"cnt": {
"type": "long long"
}
},
{
"id": {
"type": "long long"
}
}
],
"data": [
{
"cnt": 1,
"id": 1
},
{
"cnt": 1,
"id": 2
}
],
"total": 2,
"error": "",
"warning": ""
}
]
––– input –––
curl -s -X POST "http://localhost:9308/sql?mode=raw" -d "SELECT COUNT(*) AS cnt, value_attr FROM t GROUP BY value_attr" | jq .
––– output –––
[
{
"columns": [
{
"cnt": {
"type": "long long"
}
},
{
"value_attr": {
"type": "string"
}
}
],
"data": [
{
"cnt": 1,
"value_attr": "example"
},
{
"cnt": 1,
"value_attr": "test"
}
],
"total": 2,
"error": "",
"warning": ""
}
]
––– input –––
curl -s -X POST "http://localhost:9308/sql?mode=raw" -d "SELECT * FROM nonexistent_table" | jq .
––– output –––
{
"error": "unknown local table(s) 'nonexistent_table' in search request"
}
