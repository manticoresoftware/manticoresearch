Replication Conflict Handling Verification (Issue #3847)

This test verifies that the replication conflict resolution mechanism correctly handles
concurrent transactions across cluster nodes according to Galera rules.

NOTE: This test requires a pre-configured 3-node cluster with nodes accessible on:
- Node 1: 127.0.0.1:31106 (replication: 31112)
- Node 2: 127.0.0.1:31206 (replication: 31212)
- Node 3: 127.0.0.1:31306 (replication: 31312)

The test validates:
1. Non-conflicting transactions on different documents succeed
2. Conflicting transactions on same documents are detected and rejected
3. Data consistency is maintained across all nodes after conflicts
4. The original bug from issue #3847 is fixed (REPLACE vs DELETE conflict)

For single-node testing, this test creates a simple demonstration of the expected behavior.

––– comment –––
=== Single-Node Demonstration (Cluster test requires multi-node setup) ===
––– comment –––
Start Manticore Search
––– input –––
rm -f /var/log/manticore/searchd.log; stdbuf -oL searchd --stopwait > /dev/null; stdbuf -oL searchd > /dev/null
––– output –––
––– input –––
if timeout 10 grep -qm1 'accepting connections' <(tail -n 1000 -f /var/log/manticore/searchd.log); then echo 'Manticore started'; else echo 'Timeout'; fi
––– output –––
Manticore started
––– comment –––
=== Create test cluster and table ===
––– input –––
mysql -h0 -P9306 -e "CREATE CLUSTER test"
––– output –––
––– input –––
mysql -h0 -P9306 -e "CREATE TABLE tbl1 (id bigint, attr1 int)"
––– output –––
––– input –––
mysql -h0 -P9306 -e "ALTER CLUSTER test ADD tbl1"
––– output –––
––– comment –––
=== Populate test data ===
––– input –––
mysql -h0 -P9306 -e "INSERT INTO test:tbl1 (id, attr1) VALUES (1,1), (3,2), (10,3), (11,4), (12,5), (13,6), (14,7), (15,8), (20,9)"
––– output –––
––– input –––
mysql -h0 -P9306 -NB -e "SELECT COUNT(*) FROM test:tbl1"
––– output –––
+------+
|    9 |
+------+
––– comment –––
=== Test basic operations that would conflict in multi-node setup ===
––– comment –––
Test REPLACE operation
––– input –––
mysql -h0 -P9306 -e "REPLACE INTO test:tbl1 (id, attr1) VALUES (11,100), (12,200), (13,300)"
––– output –––
––– input –––
mysql -h0 -P9306 -NB -e "SELECT id, attr1 FROM test:tbl1 WHERE id IN (11,12,13) ORDER BY id ASC"
––– output –––
11	100
12	200
13	300
––– comment –––
Test DELETE operation
––– input –––
mysql -h0 -P9306 -e "DELETE FROM test:tbl1 WHERE id=13"
––– output –––
––– input –––
mysql -h0 -P9306 -NB -e "SELECT COUNT(*) FROM test:tbl1 WHERE id=13"
––– output –––
+------+
|    0 |
+------+
––– comment –––
Test UPDATE operation
––– input –––
mysql -h0 -P9306 -e "UPDATE test:tbl1 SET attr1=999 WHERE id=12"
––– output –––
––– input –––
mysql -h0 -P9306 -NB -e "SELECT attr1 FROM test:tbl1 WHERE id=12"
––– output –––
+------+
|  999 |
+------+
––– comment –––
=== Verify cluster status ===
––– input –––
mysql -h0 -P9306 -e "SHOW STATUS LIKE 'cluster%'" | grep -E "cluster_name|cluster_size"
––– output –––
#!/.*cluster_name.*test.*/!#
#!/.*cluster_size.*/!#
––– comment –––
=== Multi-Node Conflict Test Instructions ===
––– input –––
echo "=== MULTI-NODE CLUSTER TEST REQUIREMENTS ==="; echo "This test requires 3 Manticore nodes running on:"; echo "  Node 1: 127.0.0.1:31106 (replication: 31112)"; echo "  Node 2: 127.0.0.1:31206 (replication: 31212)"; echo "  Node 3: 127.0.0.1:31306 (replication: 31312)"; echo ""; echo "Test Scenarios:"; echo "A. Non-Conflicting (should succeed):"; echo "   - Different documents: UPDATE id=13 & REPLACE id=10"; echo "   - Different inserts: INSERT id=100 & INSERT id=200"; echo ""; echo "B. Conflicting (should detect conflict):"; echo "   - Same document: UPDATE id=13 & REPLACE id=13"; echo "   - Range conflict: UPDATE id>13 & REPLACE id=14"; echo "   - Double DELETE: DELETE id=1 & DELETE id=1"; echo "   - Double UPDATE: UPDATE id=15 SET attr1=111 & UPDATE id=15 SET attr1=222"; echo ""; echo "C. 3-Node Tests:"; echo "   - 3 different docs: REPLACE id=1, id=10, id=20 (all succeed)"; echo "   - 3 same doc: UPDATE id=12 on all nodes (2 conflicts)"; echo ""; echo "Expected: Conflicts detected, data consistent across nodes"; echo "See issue #3847 for details"
––– output –––
=== MULTI-NODE CLUSTER TEST REQUIREMENTS ===
This test requires 3 Manticore nodes running on:
  Node 1: 127.0.0.1:31106 (replication: 31112)
  Node 2: 127.0.0.1:31206 (replication: 31212)
  Node 3: 127.0.0.1:31306 (replication: 31312)

Test Scenarios:
A. Non-Conflicting (should succeed):
   - Different documents: UPDATE id=13 & REPLACE id=10
   - Different inserts: INSERT id=100 & INSERT id=200

B. Conflicting (should detect conflict):
   - Same document: UPDATE id=13 & REPLACE id=13
   - Range conflict: UPDATE id>13 & REPLACE id=14
   - Double DELETE: DELETE id=1 & DELETE id=1
   - Double UPDATE: UPDATE id=15 SET attr1=111 & UPDATE id=15 SET attr1=222

C. 3-Node Tests:
   - 3 different docs: REPLACE id=1, id=10, id=20 (all succeed)
   - 3 same doc: UPDATE id=12 on all nodes (2 conflicts)

Expected: Conflicts detected, data consistent across nodes
See issue #3847 for details
––– comment –––
=== Cleanup ===
––– input –––
mysql -h0 -P9306 -e "DROP TABLE test:tbl1" 2>/dev/null; mysql -h0 -P9306 -e "DROP CLUSTER test" 2>/dev/null; echo "Test completed"
––– output –––
Test completed