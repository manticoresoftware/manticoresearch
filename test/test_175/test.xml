<?xml version="1.0" encoding="utf-8"?>
<test>

<name>hitbuffer edge cases</name>
<requires>
	<heavy/>
	<non-rt/>
</requires>

<config>
indexer
{
	mem_limit		= 32M
}

searchd
{
	<searchd_settings/>
	binlog_path = #
    subtree_docs_cache  = 128k
    subtree_hits_cache  = 128k
}

source test1
{
	type			= mysql
	<sql_settings/>
	sql_query		= select * from test_table1
	sql_attr_uint	= gid
}

index test1
{
	source			= test1
	path			= <data_path/>/test1
}

source test2
{
	type			= mysql
	<sql_settings/>
	sql_query		= select * from test_table2
	sql_attr_uint	= gid
}

index test2
{
	source			= test2
	path			= <data_path/>/test2
	html_strip		= 1
	index_sp		= 1
}


index rt
{
	type = rt
	path = <data_path/>/rt

	rt_field = content
	rt_attr_uint = dummy
	morphology = none
}

index optimized_filter
{
	type = rt
	rt_mem_limit = 128k
	path = <data_path/>/optimized_filter

	rt_field = content
	rt_attr_uint = idd0
	rt_attr_uint = idd1
	rt_attr_uint = idd2
	rt_attr_uint = idd3
	rt_attr_uint = idd4
	rt_attr_uint = idd5
	rt_attr_uint = idd6
	rt_attr_uint = idd7
	rt_attr_uint = idd8
	rt_attr_uint = idd9
}

source src_hits
{
	type			= mysql
	<sql_settings/>
	sql_query		= SELECT id, title, 11 as idd FROM table_hits
	sql_attr_uint	= idd
}

index hits_plain
{
	source			= src_hits
	path			= <data_path/>/plain
}

<!-- flushing hits+docinfo in inline mode (bug #1310) -->
source src_inline
{
	type = mysql
	<sql_settings/>
	sql_query = SELECT 1 id, REPEAT('a ', 1024*1024-32768) AS text, 32 gid UNION SELECT 2 id, REPEAT('a ', 32768), 32 gid
	sql_attr_bigint = gid
}

index idx_inline
{
	source			= src_inline
	path			= <data_path/>/idx_inline
}

<!-- quorum tail vs quorum duplicates -->
source src_quorum_tail
{
	type = mysql
	<sql_settings/>
	sql_query = SELECT *, 100 + id as idd from table_quorum_tail
	sql_attr_bigint = idd
}
index idx_qt
{
	source			= src_quorum_tail
	path			= <data_path/>/idx_quorum_tail
}

source src_quorum_tail_2
{
	type = mysql
	<sql_settings/>
	sql_query = SELECT *, 100 + id as idd from table_quorum_tail_2
	sql_attr_bigint = idd
}
index idx_qt_2
{
	source			= src_quorum_tail_2
	path			= <data_path/>/idx_quorum_tail_2
}

index rt_auto_expand
{
	type = rt
	rt_mem_limit = 128k
	path = <data_path/>/rt_auto_expand

	dict = keywords
	rt_attr_uint = idd1
	rt_attr_uint = idd2
	rt_attr_uint = idd3
	rt_attr_uint = idd4
	rt_attr_uint = idd5
	rt_field = content
	min_infix_len = 3
	expand_keywords = 1
}

source src_xml1
{
	type = xmlpipe2
	xmlpipe_command = cat <this_test/>/hits1.xml
}

index idx_xml1
{
	source = src_xml1
	path = <data_path/>/idx_xml1
}

source test10
{
	type			= mysql
	<sql_settings/>
	sql_query		= select * from test_table1
	sql_attr_uint	= gid
}

index test10
{
	source			= test10
	path			= <data_path/>/test10
    expand_keywords = 1
}

</config>

<db_create>
create table test_table1
(
	id int not null,
	gid int not null,
	title varchar(8192) not null
);
</db_create>
<db_create>
create table test_table2
(
	id int not null,
	gid int not null,
	title varchar(256) not null
);
</db_create>
<db_create>
create table table_hits
(
	id int not null,
	title varchar(256) not null
);
</db_create>
<db_create>
create table table_quorum_tail
(
	id int not null,
	title varchar(4096) not null
);
</db_create>
<db_create>
create table table_quorum_tail_2
(
	id int not null,
	title varchar(64) not null
);
</db_create>
<db_drop>drop table if exists test_table1;</db_drop>
<db_drop>drop table if exists test_table2;</db_drop>
<db_drop>drop table if exists table_hits;</db_drop>
<db_drop>drop table if exists table_quorum_tail;</db_drop>
<db_drop>drop table if exists table_quorum_tail_2;</db_drop>

<!-- OR boundary -->
<db_insert>
	<var name="t" />
	<repeat count="509"><var name="t" delimiter=" ">aaa</var></repeat>
	INSERT INTO test_table1 VALUES ( 10, 1, 'bbb bbb bbb bbb <t/>' );<db_insert/>
	INSERT INTO test_table1 VALUES ( 11, 1, 'aaa aaa aaa aaa bbb bbb aaa aaa' )
</db_insert>

<db_insert>
	<repeat count="599" vars="i" inc="1" init="1">
		INSERT INTO test_table2 VALUES ( <i/>, 1, 'The box. A dummy.' )<db_insert/></repeat>
	INSERT INTO test_table2 VALUES ( 701, 1, 'The good box. A dummy.' )
</db_insert>

<!-- regression skiplist vs hit_format -->
<db_insert>
	<repeat count="144" vars="i" inc="1" init="1">
		INSERT INTO table_hits VALUES ( <i/>, 'I like as I' )<db_insert/></repeat>
	INSERT INTO table_hits VALUES ( 9200, 'And I promised myself  and her  that I was going to do something with my life instead of sitting around.  I promised her I would follow my dreams of the NHL.' )<db_insert/>
	INSERT INTO table_hits VALUES ( 9250, 'promised like as I' )<db_insert/>
	<repeat count="200" vars="i" init="9300" inc="1">
		INSERT INTO table_hits VALUES ( <i/>, 'i like as ' )<db_insert/></repeat>
</db_insert>

<!-- quorum tail vs quorum duplicates -->
<db_insert>
	INSERT INTO table_quorum_tail VALUES ( 1, 'I like as I we as I let me as I' )<db_insert/>
	INSERT INTO table_quorum_tail VALUES ( 2, 'I like as I we as I let me as I' )<db_insert/>
	INSERT INTO table_quorum_tail VALUES ( 3, 'I like as I we as I let me as I' )<db_insert/>
	INSERT INTO table_quorum_tail VALUES ( 100, 'walk away from me' )<db_insert/>
	INSERT INTO table_quorum_tail VALUES ( 101, 'walk away from me' )<db_insert/>
	INSERT INTO table_quorum_tail VALUES ( 102, 'walk away from me' )<db_insert/>

	<var name="text" />
	<repeat count="109"><var name="text" delimiter=" ">me me me me me me me me me me</var></repeat>
	<var name="text" delimiter=" ">me me me me me me me me me</var>

	INSERT INTO table_quorum_tail VALUES ( 104, '<text/> walk as we or other like.' )<db_insert/>
	INSERT INTO table_quorum_tail VALUES ( 105, 'me me me walk as we or other like.' )<db_insert/>
</db_insert>

<db_insert>
	<repeat count="513" vars="i" init="1" inc="1">
		INSERT INTO table_quorum_tail_2 VALUES ( <i/>, 'match that dude' )<db_insert/></repeat>
</db_insert>

<queries>
	<query mode="extended2" index="test1">aaa | bbb</query>
	<query mode="extended2" index="test2">box SENTENCE good</query>

	<!-- regression RT dictionary lost words on merge with ID64 -->
	<repeat count="30" vars="doc" init="1" inc="1">
		<sphinxql skip="1">
			REPLACE INTO rt ( id, content ) VALUES ( <doc/>, 'dummy text is going here' );</sphinxql></repeat>

	<sphinxql skip="1">REPLACE INTO rt ( id, content ) VALUES ( 31, 'ACT I.' );</sphinxql>
	<repeat count="68" vars="doc" init="32" inc="1">
		<sphinxql skip="1">
			REPLACE INTO rt ( id, content ) VALUES ( <doc/>, 'dummy text is going here' );</sphinxql></repeat>
	<sphinxql skip="1">REPLACE INTO rt ( id, content ) VALUES ( 100, 'And let us once again assail your ears, basketball' );</sphinxql>
	<repeat count="20" vars="doc" init="101" inc="1">
		<sphinxql skip="1">
			REPLACE INTO rt ( id, content ) VALUES ( <doc/>, 'dummy text is going here' );</sphinxql></repeat>

	<sphinxql>
		select id from rt order by id asc limit 0,2;
		show meta;
		select id from rt where match ( 'basketball' );
		show meta;
	</sphinxql>

	<!-- regression - optimized filter broken with extra-filter -->
	<repeat count="1499" vars="id" init="1" inc="1">
		<sphinxql skip="1">
			REPLACE INTO optimized_filter VALUES ( <id/>, 'dummy text is going here', 0, 1, 2, 3, 4, 5, 6, 7,8, 9 )</sphinxql></repeat>
	<repeat count="200" vars="id" init="0" inc="1">
		<sphinxql skip="1">
			REPLACE INTO optimized_filter VALUES ( <id/>, 'dummy text is going here', 0, 1, 2, 3, 4, 5, 6, 7,8, 9 )</sphinxql></repeat>

	<sphinxql>
		select * from optimized_filter where idd5&gt;1 and idd5&lt;20 order by id asc limit 2;
	</sphinxql>

	<sphinxql>

	<!-- regression skiplist -->
	select * from hits_plain where match (' " i promised " ' );
	show meta;

	<!-- quorum tail vs quorum duplicates -->
	select * from idx_qt where match (' \" I I I I do my best \"/4 ' );
	select * from idx_qt where match (' \" me me me notfound \"/2 NEAR/5 like ' );
	select * from idx_qt where match (' \" me me me notfound \"/2 NEAR/6 like ' );
	select * from idx_qt where match (' \" me me me notfound \"/2 NEAR/7 like ' );

	select *, weight() from idx_qt_2 where match (' \" match match that pal \"/2 ' ) order by id desc limit 5 option ranker=wordcount, cutoff=0;
	</sphinxql>

	<!-- regression - expand_keywords got lost for disk chunks of RT ndex -->
	<sphinxql skip="1">REPLACE INTO rt_auto_expand VALUES ( 1, 'uniq got placed here avi', 1, 2, 3, 4, 5 )</sphinxql>
	<repeat count="1698" vars="id" init="2" inc="1">
		<sphinxql skip="1">
			REPLACE INTO rt_auto_expand VALUES ( <id/>, 'dummy text is going here dummy text is going here dummy text is going here dummy text is going here dummy text is going here dummy text is going here aborted', 1, 2, 3, 4, 5 )</sphinxql></repeat>
	<sphinxql skip="1">REPLACE INTO rt_auto_expand VALUES ( 2000, 'uniq got placed here', 1, 2, 3, 4, 5 )</sphinxql>

	<sphinxql>
		select * from rt_auto_expand where match ( 'uniq' );
		show meta;
		select * from rt_auto_expand where match ( 'ace' );
		show meta;

		<!-- regression call keywords fails at disk chunk term with skiplist -->

		CALL KEYWORDS ('got aborted avi', 'rt_auto_expand', 1);

		<!-- regression field end hits vs duplicated doc, MOVED to separete test 238 to pass rt mode -->
		select id, weight() w FROM idx_xml1 WHERE MATCH('\"missed go3\" | (go3 go4)') OPTION ranker=expr('top(lcs)');
        
		<!-- regression crash on ranker expr with large query got expanded -->
		select id FROM idx_xml1 WHERE MATCH('( always_present adv1 | brand1 | coord1 | final1 | kladv1 | \"medv1 but1\" | amb1 | amb2 | \"asist1 final1\" | \"asist1    mana1\" | bevel1 | \"hoof1 veko1\" | \"mana1 veko1\" | veko1adv1 | acc2 | rel3 | sup4 | \"ins5 sa6 medv1\" | \"in7 coord1\" | \"tec8 sup9 medv1\" | \"tec10 adv1\" | \"tec10 medv1\" -sup9er)') OPTION ranker=expr('1');
       
	</sphinxql>
</queries>

</test>
