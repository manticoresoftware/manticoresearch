<?xml version="1.0" encoding="utf-8"?>
<test>

<name>wordforms: comments, after morph modifier, multiple wordform files</name>

<config>
indexer
{
	mem_limit			= 16M
}

searchd
{
	<searchd_settings/>
}

source test
{
	type				= mysql
	<sql_settings/>
	sql_query			= select * from test_table
}

index test
{
	source				= test
	path				= <data_path/>/test
	wordforms			= <this_test/>/wordforms.txt
	wordforms			= <this_test/>/words*.txt
	morphology			= stem_en
}

index ord1
{
	source				= test
	path				= <data_path/>/ord1
	wordforms			= <this_test/>/wf1.txt
}

index ord2
{
	source				= test
	path				= <data_path/>/ord2
	wordforms			= <this_test/>/wf2.txt
}

source test1
{
	type				= mysql
	<sql_settings/>
	sql_query			= select *, 11 as gid from test_table1
	sql_attr_uint		= gid
}

index idx_pre1
{
	source				= test1
	path				= <data_path/>/idx_pre1
	index_exact_words   = 1	
	min_prefix_len 		= 1
}

index idx_pre2 : idx_pre1
{
	path				= <data_path/>/idx_pre2
	wordforms			= <this_test/>/wf_pre.txt
}


source test3
{
	type				= mysql
	<sql_settings/>
	sql_query			= select *, 11 as gid from test_table1
	sql_attr_uint		= gid
}

index idx3
{
	source				= test3
	path				= <data_path/>/idx3
    wordforms			= <this_test/>/wf3.txt
}

index idx21
{
	source				= test3
	path				= <data_path/>/idx21
    wordforms			= <this_test/>/wf21.txt
    
    charset_table       = non_cjk,=,U+3e,U+7e
    embedded_limit      = 0  
}

index idx22
{
	source				= test3
	path				= <data_path/>/idx22
    wordforms			= <this_test/>/wf21.txt
    
    charset_table       = non_cjk,=,U+3e,U+7e
    embedded_limit      = 128000
}

index idx31
{
	source				= test3
	path				= <data_path/>/idx31
    exceptions			= <this_test/>/ex21.txt
    
    charset_table       = non_cjk,=,U+3e
    embedded_limit      = 0  
}

index idx32
{
	source				= test3
	path				= <data_path/>/idx32
    exceptions			= <this_test/>/ex21.txt
    
    charset_table       = non_cjk,=,U+3e
    embedded_limit      = 128000    
}
</config>

<metaindex name='META:wf'>
<index>idx21</index>
<index>idx22</index>
</metaindex>

<metaindex name='META:ex'>
<index>idx31</index>
<index>idx32</index>
</metaindex>

<db_create>
CREATE TABLE test_table
(
	id INTEGER PRIMARY KEY NOT NULL,
	content VARCHAR(255) NOT NULL
);
</db_create>
<db_drop>DROP TABLE IF EXISTS test_table;</db_drop>
<db_insert>
INSERT INTO test_table VALUES
( 100, 'drink drive' ),
( 101, 'smoked flew' ),
( 102, 'simple form' ),
( 103, 'manuscript' ),
( 104, 'before after' ),
( 105, 'me walked' ),
( 106, 'us walk' ),
( 107, 'me run' ),
( 108, 'us running' ),
( 111, 'tell me test fest but not test pest' ),
( 120, 'wound care and ostomy' )
</db_insert>

<db_create>
CREATE TABLE test_table1
(
	id INTEGER PRIMARY KEY NOT NULL,
	content VARCHAR(255) NOT NULL
);
</db_create>
<db_drop>DROP TABLE IF EXISTS test_table1</db_drop>
<db_insert>INSERT INTO test_table1 VALUES ( 100, 'forty' ), ( 101, 'fortyfour' )</db_insert>

<queries><sphinxql>
select * from test where match('multi_before');
select * from test where match('wordform');
select * from test where match('result1');
select * from test where match('result2');
select * from test where match('book1');
select * from test where match('book2');
select * from test where match('shouldnotbe');
select * from test where match('ran');
select * from test where match('halt');
<!-- regression crash on wordform with multiple destination tokens -->
select * from test where match('test test');
select * from test where match('test pest');
<!-- regression for multiforms applied in the wrong order -->
select * from ord1 where match('^wound$');
select * from ord2 where match('^wound$');

<!-- regression prefix matches no wordform only index -->
select id from idx_pre1 where match('forty*') order by id asc;
select id from idx_pre2 where match('forty*') order by id asc;

<!-- regression query parse error due to multi wordform inside the phrase -->
select id from idx3 where match(' ("e a") ') order by id asc;

<!-- escaping delimiter at wordforms and exceptions -->
CALL KEYWORDS ( 'a> b', 'META:wf' );
CALL KEYWORDS ( '>b b', 'META:wf' );
CALL KEYWORDS ( 'c=> b', 'META:wf' );
CALL KEYWORDS ( '=>d b', 'META:wf' );
CALL KEYWORDS ( '=>a > f > b', 'META:wf' );
CALL KEYWORDS ( '\\~g b', 'META:wf' );
CALL KEYWORDS ( '\\~g b ~g', 'META:wf' );

CALL KEYWORDS ( 'a> b', 'META:ex' );
CALL KEYWORDS ( '>b b', 'META:ex' );
CALL KEYWORDS ( 'c=> b', 'META:ex' );
CALL KEYWORDS ( '=>d b', 'META:ex' );
CALL KEYWORDS ( '=>a> b', 'META:ex' );

</sphinxql></queries>

</test>
