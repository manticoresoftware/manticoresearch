<?xml version="1.0" encoding="utf-8"?>
<test>
<name>replication for RT via HTTP</name>

<requires>
	<replication/>
	<non-windows/>
	<http/>
	<force-rt/>
	<heavy/>
</requires>
<skip_indexer/>
<num_agents>3</num_agents>

<config>

<agent0>
searchd
{
	<searchd_settings/>
	data_dir = <data_path path="data0" />
	server_id = <agent_id/>
}
</agent0>
<agent1>
searchd
{
	<searchd_settings/>
	data_dir = <data_path path="data1"/>
	server_id = <agent_id/>
}
</agent1>
<agent2>
searchd
{
	<searchd_settings/>
	data_dir = <data_path path="data2"/>
	server_id = <agent_id/>
}
</agent2>
</config>

<queries>
<!-- request to node 0 -->
<sphinxql d="0">
	create table rt1 (title text indexed, mva1 multi, gid int, j1 json) rt_mem_limit='128k';
	create table rt2 (title text indexed, mva1 multi, gid int, j1 json) rt_mem_limit='128k';

	insert into rt1 (id,title,mva1,gid,j1) values (1, 'test 1', (11,12,13), 11, '{"data":"test 1", fd:11}'), (2, 'test 2', (21,22,23), 21, ''), (3, 'test 3', (), 31, '{"data":"test 3", fd:31}');
	SELECT * FROM test:rt1;

	replace into rt1 (id,title,mva1,gid,j1) values (5, 'test 5', (51,52,53), 51, '{"data":"test 5", fd:51}'), (1, 'test 6', (61,62,63), 61, '{"data":"test 6", fd:16}'), (7, 'test 7', (), 71, '');
	SELECT * FROM test:rt1;

	create cluster test;
	ALTER CLUSTER test ADD rt1;
	ALTER CLUSTER test ADD rt2;
</sphinxql>

<!-- request to node 1 -->
<sphinxql d="1" cluster_connect="0">
	join cluster test at '%addr_connect%'
</sphinxql>

<!-- request to node 2, chain nodes 2>1>0 and update nodes -->
<sphinxql d="2" cluster_connect="0">
	join cluster test at '%addr_connect%'
</sphinxql>


<!-- query errors due to missed cluster or wrong cluster name -->
<query d="2" endpoint="json/insert">
{
	"index":"rt1",
	"id":221,
	"doc":
	{
	    "gid" : 221
	}
}
</query>
<query endpoint="json/insert" d="2">
{
	"index":"test:rt1",
	"id":221,
	"doc":
	{
	    "gid" : 221
	}
}
</query>

<query d="2" endpoint="json/insert">
{
	"cluster":"test",
	"index":"rt1",
	"id":221,
	"doc":
	{
	    "gid" : 221,
	    "j1" : "{\"data\":\"test 221\", \"fd\":221}",
	    "title" : "test 221"
	}
}
</query>

<query d="1" endpoint="json/insert">
{
	"cluster":"test",
	"index":"rt1",
	"id":101,
	"doc":
	{
	    "gid" : 101,
	    "j1" : "{\"data\":\"test 101\", \"fd\":101}",
	    "title" : "test 101"
	}
}
</query>


<sphinxql d="0" system="wait-commit" cluster="test" wait_value="4" />
<query d="0" endpoint="json/search">
	{ "index": "rt1", "query": { "match_all": {} } }
</query>

<sphinxql d="0" system="wait-commit" cluster="test" wait_value="4"/>
<query d="2" endpoint="json/search">
	{ "index": "rt1", "query": { "range": { "j1.fd": { "gte": 100 } } } }
</query>

<query d="1" endpoint="json/update">
{
	"cluster":"test",
	"index":"rt1",
	"doc":
	{
	    "gid" : 1021
	},
	"query": { "match": { "*": "221" } }	
}
</query>

<sphinxql d="0" system="wait-commit" cluster="test" wait_value="5"/>
<query d="0" endpoint="json/search">
	{ "index": "rt1", "query": { "match": { "*": "221" } } }
</query>

<query d="0" endpoint="json/delete">
{
	"cluster":"test",
	"index":"rt1",
	"id":221
}
</query>

<query d="0" endpoint="json/insert">
{
	"cluster":"test",
	"index":"rt1",
	"id":501,
	"doc":
	{
	    "gid" : 501,
	    "j1" : "{\"data\":\"test 501\", \"fd\":501}",
	    "title" : "test 501"
	}
}
</query>

<sphinxql d="0" system="wait-commit" cluster="test" wait_value="7"/>
<query d="1" endpoint="json/search">
	{ "index": "rt1", "query": { "match_all": {} } }
</query>

<sphinxql d="0" system="wait-commit" cluster="test" wait_value="7"/>
<query d="2" endpoint="json/search">
	{ "index": "rt1", "query": { "range": { "j1.fd": { "gte": 100 } } } }
</query>

<!-- _bulk cluster:name format -->
<bulk endpoint="_bulk" content="application/x-ndjson" method="POST">
{ "index" : { "_index" : "test:rt1", "_id" : "301" } }
{ "gid" : "301" }

</bulk>
<query endpoint="json/search">
{ "index": "rt1", "query": { "match_all": {} } }
</query>

<!-- cleanup -->

<sphinxql d="0">
	ALTER CLUSTER test DROP rt1;
	ALTER CLUSTER test DROP rt2;
	DROP TABLE rt1;
	DROP TABLE rt2;
</sphinxql>

</queries>

</test>
