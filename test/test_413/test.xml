<?xml version="1.0" encoding="utf-8"?>
<test>

<name>full-text NOT operator</name>

<config>
indexer
{
	mem_limit		= 16M
}

searchd
{
	<searchd_settings/>
    not_terms_only_allowed = 1
}

source test
{
	type			= mysql
	<sql_settings/>
	sql_query		= select * from test_table
}

index test1
{
	source			= test
	path			= <data_path/>/test
}

index rt1
{
    type = rt
    path = <data_path/>/rt1
    rt_field = title
    rt_attr_uint = gid
}

index rt2
{
    type = rt
    path = <data_path/>/rt2
    rt_field = title
    rt_attr_uint = gid
}

index pq1
{
	type			= percolate
	path			= <data_path/>/pq1
	rt_field 		= title
	rt_attr_uint	= gid
}
</config>

<db_create>
CREATE TABLE test_table
(
	id INTEGER PRIMARY KEY NOT NULL,
	subject VARCHAR(50) NOT NULL
);
</db_create>
<db_drop>DROP TABLE IF EXISTS test_table;</db_drop>

<db_insert>INSERT INTO test_table VALUES ( 1, 'hello world' );</db_insert>
<db_insert>INSERT INTO test_table VALUES ( 2, 'hello hallo world' );</db_insert>
<db_insert>INSERT INTO test_table VALUES ( 3, 'a b world' );</db_insert>
<db_insert>INSERT INTO test_table VALUES ( 4, 'a b c world' );</db_insert>
<db_insert>INSERT INTO test_table VALUES ( 5, 'hello war' );</db_insert>
<db_insert>INSERT INTO test_table VALUES ( 6, 'hello hallo war' );</db_insert>
<db_insert>INSERT INTO test_table VALUES ( 7, 'a b war' );</db_insert>
<db_insert>INSERT INTO test_table VALUES ( 8, 'a b c war' );</db_insert>

<metaindex name='META:all'>
<index>test1</index>
<index>rt1</index>
</metaindex>

<queries><sphinxql>
INSERT INTO rt1 (id, title) VALUES ( 1, 'hello world' ),( 2, 'hello hallo world' ),( 3, 'a b world' ),( 4, 'a b c world' );
INSERT INTO rt1 (id, title) VALUES ( 5, 'hello war' ),( 6, 'hello hallo war' ),( 7, 'a b war' ),( 8, 'a b c war' );
select id from META:all where match ('-world') order by id asc;
select id from META:all where match ('-hello') order by id asc;
select id from META:all where match ('-war') order by id asc;

INSERT INTO pq1 (query) VALUES ('-world');
INSERT INTO pq1 (query) VALUES ('-hello');
INSERT INTO pq1 (query) VALUES ('-war');
CALL PQ ('pq1', ('hello world', 'hello hallo world', 'a b world', 'a b c world' ), 1 as docs, 0 as docs_json, 1 as query );
CALL PQ ('pq1', ('hello war', 'hello hallo war', 'a b war', 'a b c war' ), 1 as docs, 0 as docs_json, 1 as query );

<!-- multiple not operators and not operators inside group -->
select id from META:all where match ('-war -a') order by id asc;
select id from META:all where match ('(-war -a)') order by id asc;
select id from META:all where match ('hello ( -war -hallo )') order by id asc;
select id from META:all where match ('( -war -hallo ) hello') order by id asc;
select id from META:all where match ('hello -war -hallo') order by id asc;
select id from META:all where match ('-war -hallo hello') order by id asc;

<!-- single not vs segments with killed rows produces duplicates documents at the result set -->
REPLACE INTO rt2 (id, title) VALUES ( 1, 'hello world' ),( 2, 'hello hallo world' );
REPLACE INTO rt2 (id, title) VALUES ( 1, 'hello world' ),( 3, 'hello hallo world' );
select id from rt2 where match ('-hi') order by id asc;

<!-- single not vs disk chunk with killed rows -->
flush ramchunk rt2;
REPLACE INTO rt2 (id, title) VALUES ( 1, 'hello world' ),( 4, 'hello hallo world' );
select id from rt2 where match ('-hi') order by id asc;

<!-- disk chunk vs expr ranker -->
select id from rt2 where match('-hi') order by id asc option ranker=expr('1'), not_terms_only_allowed=1;

</sphinxql></queries>
</test>
