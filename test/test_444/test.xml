<?xml version="1.0" encoding="utf-8"?>
<test>
<name>distinct at facet queries</name>

<requires>
<non-rt/>
</requires>

<config>

indexer
{
	mem_limit		= 16M
}

searchd
{
	<searchd_settings/>
}

source srcmain
{
	type			= mysql
	<sql_settings/>
	sql_attr_uint = tag
	sql_attr_uint = gr
	sql_query		= SELECT * FROM test_table WHERE document_id in (1,2)
}

source srcdelta : srcmain
{
	sql_query		= SELECT * FROM test_table WHERE document_id in (3,4)
}

index main
{
	source			= srcmain
	path			= <data_path/>/main
}

index delta
{
	source			= srcdelta
	path			= <data_path/>/delta
}

index test
{
	type = distributed
	local = main
	local = delta
}

index test1
{
	type = rt
	path			= <data_path/>/test1
	rt_mem_limit = 128k
	rt_field            = body
	rt_attr_uint = gr1
	rt_attr_uint = gr2
}

index test2
{
	type = rt
	path			= <data_path/>/test2
	rt_mem_limit = 128k
	rt_field            = body
	rt_attr_uint = gr1
	rt_attr_uint = gr2
}

source src
{ 
    type = mysql 
	<sql_settings/>
    sql_query = select 1, 'abc' f, 1 a 
    sql_attr_uint = a 
} 

index idx
{ 
    type = plain 
    source = src 
    path = <data_path/>/idx 
}
 
source src2:src
{ 
    sql_query_pre = drop table if exists tmp20220613 
    sql_query_pre = create table if not exists tmp20220613(id int, f char(20), a int) 
    sql_query = select * from tmp20220613 
} 
 
index idx2:idx
{ 
    source = src2 
    path = <data_path/>/idx2 
} 

source src11
{
	type			= mysql
	<sql_settings/>
	sql_attr_uint = tag
	sql_attr_uint = gr
	sql_query		= SELECT * FROM test_table1 WHERE document_id &lt;= 1000
}

source src12 : src11
{
	sql_query		= SELECT * FROM test_table1 WHERE document_id &gt;= 1001
}

index i11
{
	source			= src11
	path			= <data_path/>/i11
}

index i12
{
	source			= src12
	path			= <data_path/>/i12
}

source src21
{
	type			= mysql
	<sql_settings/>
	sql_attr_uint = tag
	sql_attr_uint = gr
    sql_attr_uint = brand
    sql_attr_uint = idd
	sql_query		= SELECT * FROM test_table2
}

index i21
{
	source			= src21
	path			= <data_path/>/i21
}
</config>

<queries>
<sphinxql>
INSERT INTO test1 (id,gr1,gr2,body) VALUES ( 1, 1, 1, 'main' ), ( 2, 2, 1, 'main' );
flush ramchunk test1;
INSERT INTO test1 (id,gr1,gr2,body) VALUES ( 3, 1, 1, 'main' ), ( 4, 3, 1, 'main' );
flush ramchunk test1;
INSERT INTO test2 (id,gr1,gr2,body) VALUES ( 1, 1, 1, 'main' ), ( 2, 2, 1, 'main' );

<!-- distinct at facet of RT disk chunks. (double ;; is necessary in test since facet returns >1 resultsets) -->
select * from test1 FACET gr1;;
select * from test1 FACET gr1 distinct;;
select * from test1 FACET gr1 distinct gr2;;

<!-- distinct at facet of multiple local indexes -->
select * from test1,test2 FACET gr1;;
select * from test1,test2 FACET gr1 distinct;;

<!-- distinct at facet BY of multiple local indexes -->
select * from test1,test2 FACET gr2 by gr1;;
select * from test1,test2 FACET gr2 by gr1 distinct;;

<!-- count distinct at distr-of-plain-locals -->
select count (DISTINCT tag) a from test group by gr;
select * from test facet gr;;
select * from test facet gr distinct;;
select * from test facet gr distinct tag;;

<!-- count distinct at couple of plain-locals -->
select count (DISTINCT tag) a from main,delta group by gr;
select * from main,delta facet gr;;
select * from main,delta facet gr distinct;;
select * from main,delta facet gr distinct tag;;

<!-- crash on count distinct  -->
select a, count(distinct id) from idx,  idx2 group by a;
select a, count(distinct id) from idx2, idx  group by a;
select a, count(distinct id) from idx  group by a;
select a, count(distinct id) from idx2 group by a;

select id, count(distinct tag) from i11, i12 group by gr limit 10 option max_matches = 100;
select id, count(distinct tag) from i11, i12 group by gr limit 10 option max_matches = 1000;

<!-- sort by count distinct -->
select tag, count(*) as c from i21 group by tag order by count (distinct gr) desc;
select id, tag from i21 order by id desc limit 1 facet tag order by count (distinct gr) desc;;
select id, tag, gr from i21 order by id desc limit 1 facet tag order by count (distinct gr) desc facet brand order by count (distinct gr) desc;;
select id, tag from i21 order by id desc limit 1 facet tag distinct gr order by count (distinct gr) desc;;

<!-- error for multiple count distinct -->
select tag, count(*) as c, count (distinct idd) cd from i21 group by tag order by count (distinct gr) desc;
select tag, gr, count(*) as c from i21 facet tag order by count (distinct gr) desc facet brand order by count (distinct idd) desc;;
select tag, count(*) as c from i21 facet tag distinct idd order by count (distinct gr) desc;;

</sphinxql>
</queries>

<db_create>
CREATE TABLE `test_table`
(
	`document_id` int(11) NOT NULL default '0',
	`tag` int(11) NOT NULL default '0',
	`gr` int(11) NOT NULL default '0',
	`body` varchar(255) NOT NULL default ''
)
</db_create>

<db_drop>
DROP TABLE IF EXISTS `test_table`
</db_drop>

<db_insert>
INSERT INTO `test_table` VALUES
( 1, 1, 1, 'main' ),
( 2, 2, 1, 'main' ),
( 3, 1, 1, 'main' ),
( 4, 3, 1, 'main' )
</db_insert>

<db_create>
CREATE TABLE `test_table1`
(
	`document_id` int(11) NOT NULL default '0',
	`tag` int(11) NOT NULL default '0',
	`gr` int(11) NOT NULL default '0',
	`body` varchar(255) NOT NULL default ''
)
</db_create>

<db_drop>
DROP TABLE IF EXISTS `test_table1`
</db_drop>

<db_insert>
	<var name="vals"/>
	<repeat count="1000" vars="id tag gr" init="1 100 1100" inc="1 12 13"><var name="vals" delimiter=",">(<id/>,<tag/>,<gr/>, 'test 1')</var></repeat>
	INSERT INTO test_table1 VALUES <vals/>
</db_insert>

<db_insert>
	<var name="vals"/>
	<repeat count="1000" vars="id tag gr" init="1000 200 1200" inc="1 23 33"><var name="vals" delimiter=",">(<id/>,<tag/>,<gr/>, 'test 12')</var></repeat>
	INSERT INTO test_table1 VALUES <vals/>
</db_insert>

<db_drop>
DROP TABLE IF EXISTS `test_table2`
</db_drop>

<db_create>
CREATE TABLE `test_table2`
(
	`document_id` int(11) NOT NULL default '0',
	`tag` int(11) NOT NULL default '0',
	`gr` int(11) NOT NULL default '0',
	`brand` int(11) NOT NULL default '0',
	`idd` int(11) NOT NULL default '0'
)
</db_create>

<db_insert>
INSERT INTO `test_table2` (document_id, tag, gr, brand, idd) VALUES 
(1, 1, 1, 1, 1), (2, 9, 108, 54, 106), (3, 10, 104, 53, 101), (4, 10, 106, 57, 104), (5, 1, 103, 59, 101),
(6, 2, 104, 58, 107), (7, 1, 105, 60, 104), (8, 6, 104, 53, 107), (9, 4, 105, 57, 105), (10, 2, 104, 60, 102),
(11, 3, 104, 58, 105), (12, 7, 104, 55, 106), (13, 3, 104, 58, 105), (14, 5, 110, 59, 105), (15, 7, 104, 60, 106),
(16, 7, 104, 52, 104), (17, 2, 105, 59, 104), (18, 2, 108, 52, 104), (19, 8, 106, 52, 103), (20, 9, 105, 60, 104),
(21, 10, 105, 60, 110), (22, 4, 107, 51, 104), (23, 9, 105, 58, 106), (24, 1, 106, 58, 105), (25, 2, 105, 53, 105),
(26, 9, 110, 59, 104), (27, 1, 106, 52, 101), (28, 2, 105, 51, 105), (29, 3, 106, 52, 106), (30, 9, 107, 60, 103),
(31, 10, 104, 51, 105), (32, 7, 104, 53, 110), (33, 8, 106, 54, 109), (34, 1, 101, 58, 106), (35, 9, 106, 57, 104),
(36, 7, 106, 59, 106), (37, 2, 106, 56, 106), (38, 2, 103, 59, 106), (39, 10, 105, 51, 106), (40, 3, 106, 57, 109),
(41, 1, 106, 52, 101), (42, 9, 105, 53, 104), (43, 10, 106, 59, 104), (44, 10, 102, 57, 106), (45, 9, 105, 52, 106),
(46, 9, 109, 52, 104), (47, 7, 107, 57, 102), (48, 1, 105, 58, 105), (49, 4, 105, 57, 106)
</db_insert>

</test>
