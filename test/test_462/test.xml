<?xml version="1.0" encoding="utf-8"?>
<test>

<name>columnar attributes at ranker and grouper</name>

<requires>
<columnar/>
</requires>

<config>
indexer
{
	mem_limit		= 16M
}

searchd
{
	<searchd_settings/>
}

source test
{
	type			= mysql
	<sql_settings/>
	sql_query		= select * from test_table

	sql_attr_uint     = price
	sql_attr_bigint   = brand_id
	sql_field_string  = title
	sql_attr_string   = brand_name
	sql_field_string  = property
	sql_attr_multi    = uint categories from field
	sql_attr_json     = j
	sql_attr_float    = coeff
}

index test_col3
{
	source 			= test
	path			= <data_path/>/test_col3

	columnar_attrs 	= price, brand_id, title, brand_name, property, categories
}

index test_col_rt
{
	type			= rt
	path			= <data_path/>/test_col_rt
	rt_field 		= title
	rt_attr_uint	= gid
}

source cv2_src
{
	type			= mysql
	<sql_settings/>
	sql_query		= select * from cv2_table

	sql_attr_bigint     = lastupdateddate
	sql_attr_bigint   = participantidnumber
}

index cv2
{
	source			= cv2_src
	path			= <data_path/>/cv2
    
    columnar_attrs 	= lastupdateddate, participantidnumber
}

</config>

<db_create>
CREATE TABLE `test_table` (
  `id` int(11),
  `price` int(11),
  `brand_id` int(11),
  `title` varchar(255),
  `brand_name` varchar(255),
  `property` varchar(255),
  `categories` varchar(255),
  `j` varchar(255),
  `coeff` float
);
</db_create>

<db_drop>DROP TABLE IF EXISTS test_table;</db_drop>

<db_create>
CREATE TABLE `cv2_table` (
  `id` BIGINT,
  `lastupdateddate` BIGINT,
  `participantidnumber` BIGINT,
  `title` varchar(255)
);
</db_create>

<db_drop>DROP TABLE IF EXISTS cv2_table;</db_drop>

<db_insert>insert into test_table (id,price,brand_id,title,brand_name,property,categories,j,coeff) values
(1001,529,9,'Product Five Two','Brand Nine','Four','(13,14)','{x:[13,14],a:["a13","a14"]}',1.0),
(1002,173,10,'Product Five Seven','Brand Ten','Four','(10)','{x:[10],a:["a10"]}',2.0),
(1003,121,1,'Product Seven Nine','Brand One','Five','(13,14,15)','{x:[13,14,15],a:["a13","a14","a15"]}',1.0),
(1004,474,7,'Product Ten Three','Brand Seven','Nine','(10,11,12)','{x:[10,11,12],a:["a10","a11","a12"]}',0.0),
(1005,20,7,'Product Ten Four','Brand Seven','Seven','(13)','{x:[13],a:["a13"]}',1.0),
(1006,100,3,'Product One Three','Brand Three','Seven','(10)','{x:[10],a:["a10"]}',2.0),
(1007,724,9,'Product Four Eight','Brand Nine','Five','(11,12,13)','{x:[11,12,13],a:["a11","a12","a13"]}',0.0),
(1008,13,3,'Product Seven One','Brand Three','Eight','(12,13,14)','{x:[12,13,14],a:["a12","a13","a14"]}',1.0),
(1009,54,2,'Product Ten Seven','Brand Two','Eight','(11)','{x:[11],a:["a11"]}',0.0),
(1010,986,6,'Product Six Ten','Brand Six','Eight','(12,13,14)','{x:[12,13,14],a:["a12","a13","a14"]}',3.0),
(1011,100,10,'Product One Ten','Brand Ten','Four','(11)','{x:[11],a:["a11"]}',2.5),
(1012,69,10,'Product Five Seven','Brand Ten','Two','(12,13,14)','{x:[12,13,14],a:["a12","a13","a14"]}',2.5),
(1013,365,4,'Product Two Nine','Brand Four','Ten','(10,11,12)','{x:[10,11,12],a:["a10","a11","a12"]}',1.0),
(1014,455,1,'Product Two Eight','Brand One','Nine','(13,14,15)','{x:[13,14,15],a:["a13","a14","a15"]}',4.0),
(1015,718,4,'Product Nine Two','Brand Four','Eight','(10)','{x:[10],a:["a10"]}',2.0),
(1016,758,9,'Product Eight Ten','Brand Nine','Seven','(13)','{x:[13],a:["a13"]}',3.0),
(1017,493,4,'Product Nine Six','Brand Four','Five','(11,12)','{x:[11,12],a:["a11","a12"]}',0.0),
(1018,413,3,'Product Eight Five','Brand Three','Four','(11,12,13)','{x:[11,12,13],a:["a11","a12","a13"]}',2.0),
(1019,78,4,'Product Six Five','Brand Four','Two','(12)','{x:[12],a:["a12"]}',1.0),
(1020,169,4,'','Brand Four','Eight','(10,11)','{x:[10,11],a:["a10","a11"]}',5.0)
</db_insert>

<db_insert>
INSERT into cv2_table (id, lastupdateddate, participantidnumber, title) VALUES
( 939103038699371100, 638303733310000000,    3103361803078791, 'test 111'),
( 939103038812502700, 637225409440000000,    2819971314790373, 'test 112'),
( 939103038863191800, 637357650140000000,    3133095206786486, 'test 113'),
( 939111571035217800, 637342034440000000,    2293292127465736, 'test 114'),
( 939111922602476300, 637873375670000000,    6374292122644105, 'test 115'),
( 939111922602495900, 637825292730000000,    4912274065518156, 'test 116'),
( 939111922754127400, 638325039600000000,    3097824493646948, 'test 117')
</db_insert>

<queries><sphinxql>
<!-- regression crash on using columnar attribute at the expr ranker from plain index-->
select id, weight() as w, title from test_col3 where match('ten') order by w desc, id desc option ranker=expr('sum(in(categories,11,12))');
<!-- regression crash on using columnar attribute at the expr ranker from RT index-->
INSERT INTO test_col_rt(id, gid, title) VALUES (1,177,'def');
INSERT INTO test_col_rt(id, gid, title) VALUES (2,17,'def');
INSERT INTO test_col_rt(id, gid, title) VALUES (3,1,'def');
SELECT id, weight() as w FROM test_col_rt WHERE MATCH('def') order by w desc, id desc OPTION ranker=expr('sum(gid)');

<!-- regression crash on using columnar attribute at the grouper aggregate then having -->
SELECT id, max(lastupdateddate) as maxdate FROM cv2 GROUP BY participantidnumber HAVING maxdate &lt; 638303733310000000 ORDER BY id asc;

</sphinxql></queries>

</test>